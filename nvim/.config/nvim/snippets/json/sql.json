{
"Postgres Create Table": {
			"prefix": "pgcreate",
			"body": [
				"CREATE TABLE\n    ${1:IF NOT EXISTS} ${2:table_name} (\n        id serial PRIMARY KEY,\n        bool_value boolean,\n        char_value char(10),\n        varchar_value varchar(255),\n        text_value text,\n        smallint_value smallint,\n        int_value integer,\n        bigint_value bigint,\n        numeric_value numeric(10, 2), -- (number of digits, decimal digits)\n        real_value real,\n        double_value double precision,\n        date_value date,\n        time_value time,\n        interval_value interval,\n        uuid_value uuid,\n        fkey_name INTEGER REFERENCES reference_table_name(id) NOT NULL -- foreign key\n    );"
			],
			"description": "boilerplate code to create a table in postgres"
		},
	
	"Postgres Add primary key": {
		"prefix": "pgpkey",
		"body": [
			"ALTER TABLE ${1:table_name} ADD PRIMARY KEY (${2:col_1}, ${3:col_2});"
		],
		"description": "add a primary key to a table in postgres"
	},

	"Postgres Add foreign key": {
		"prefix": "pgfkey",
		"body": [
			"ALTER TABLE ${1:table_name}\n	ADD CONSTRAINT ${2:constraint_name} FOREIGN KEY (${3:fkey_name}) \n	REFERENCES ${4:referencing_table} (${5:referencing_col}) \n	${6:ON DELETE CASCADE};"
		],
		"description": "add a foreign key to a table in postgres"
	},

	"Postgres Drop a table": {
		"prefix": "pgdrop",
		"body": [
			"DROP TABLE ${1:IF EXISTS } ${2:table_name} ${3:CASCADE};"
		],
		"description": "drop a table in postgres"
	},

	"Postgres Insert into a table": {
		"prefix": "pginsert",
		"body": [
			"INSERT INTO\n    ${1:table_name} ${2:(col1, col2, ...)} -- not needed when inserting all cols\nVALUES\n    ${3:(col1_val, col2_val, ...)},\n    ${4:(col1_val, col2_val, ...)};\n"
		],
		"description": "insert into a table in postgres"
	},

	
	
	"Postgres delete from a table": {
		"prefix": "pgdelete",
		"body": [
			"DELETE FROM ${1:table_name}\nWHERE ${2:(condition1 AND condition2) OR condition3};\n"
		],
		"description": "delete from a table in postgres"
	},	

	"Postgres update a table": {
		"prefix": "pgupdate",
		"body": [
			"UPDATE ${1:table_name}\n	SET\n		${2:column1} = ${3:value1},\n		${4:column2 = value2 ...} \n	${5:WHERE}\n		${6:(condition1 AND condition2) OR condition3};"
		],
		"description": "delete from a table in postgres"
	},

	"Postgres update a table with case": {
		"prefix": "pgupdatecase",
		"body": [
			"UPDATE ${1:table_name}\nSET ${2:column_name} = CASE\n  WHEN ${3:condition_1} THEN ${4:value_1}\n  WHEN ${4:condition_1} THEN ${5:value_1}\n  ${6:...}\n  ELSE ${7:default_value}\nEND\nWHERE ${8:(condition1 AND condition2) OR condition3};\n"
		],
		"description": "delete from a table in postgres"
	},

	"Postgres add a column": {
		"prefix": "pgaddcol",
		"body": [
			"ALTER TABLE ${1:table_name} ADD COLUMN ${2:col_name} ${3:col_type} ${4:NOT NULL};"
		],
		"description": "add a column to a table in postgres"
	},

	"Postgres rename a column": {
		"prefix": "pgrenamecol",
		"body": [
			"ALTER TABLE ${1:table_name} RENAME COLUMN ${2:col_name} TO ${3:new_col_name};"
		],
		"description": "rename a column in a table in postgres"
	},

	"Postgres rename a table": {
		"prefix": "pgrenametable",
		"body": [
			"ALTER TABLE ${1:table_name} RENAME TO ${3:new_table_name};"
		],
		"description": "rename a table in postgres"
	},

	"Postgres add check constraint" : {
		"prefix": "pgcheck",
		"body": [
			"ALTER TABLE ${1:table_name}\n	ADD CONSTRAINT ${2:constraint_name} CHECK (${3:condition});"
		],
		"description": "add check constraint to a table in postgres"
	},

	"Postgres default value constraint" : {
		"prefix": "pgdefault",
		"body": [
			"ALTER TABLE ${1:table_name} ALTER COLUMN ${2:col_name} SET DEFAULT ${3:default_val};"
		],
		"description": "set a default value to a column in a table in postgres"
	},

	
	"Postgres not null constraint" : {
		"prefix": "pgnotnull",
		"body": [
			"ALTER TABLE ${1:table_name} ALTER COLUMN ${2:col_name} SET NOT NULL;"
		],
		"description": "set not null constraint to a column in a table in postgres"
	},

	

	"Postgres select statement" : {
		"prefix": "pgselect",
		"body": [
			"SELECT ${1:*} FROM ${2:table_name} ${3:WHERE} ${4:conditions};"
		],
		"description": "select statement in postgres"
	}

}
